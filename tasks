#!/bin/bash

usage() {
    cat <<TXT
USAGE: tasks <COMMAND> [OPTIONS]

All tasks are stored under "$TASKS_DIRECTORY".

If you wish to change this, then set the environment variable
"TASKS_DIRECTORY" and it will use that.

Tagging a task is done by using the "+tagname"

Making a task apart of a project is done with "#projectname"

Marking a task as completed is done by "@completed(YYYY-MM-DD [HH:MM])"

Marking a task as priority of critical, important, high, or low is done by
"@<priority name>".

If you make a mistake, you can correct the entry by opening the log file in your
editor or just using the edit command.

Making a project due sometime is done by "@due(tomorrow)" or "@due(DATE)"
The format for the DATE field is the same as the unix command "date --date"
please reference it if you need more information.

COMMAND:

    add | a
        Add a new task.

    list | ls | l
        List all tasks

    remove | rm
        Delete a task.

    complete | c
        Mark a task as complete.

    uncomplete | C
        Mark a completed task as uncomplete

    edit | e
        Edit a task.

    summary | s
        Get a summary of all the tasks you did today and yesterday

    clean
        Clean up the current log file and remove any erroneous entries

    archive
        Archives a set of tasks into a different file

    use
        Change which organization you are using
TXT
}

case $1 in
    add|a)
        shift
        tasks-add $*
        ;;
    list|ls|l)
        shift
        tasks-list $*
        ;;
    remove|rm)
        shift
        tasks-remove $*
        ;;
    complete|c)
        shift
        tasks-complete $*
        ;;
    uncomplete|C)
        shift;
        tasks-uncomplete $*
        ;;
    edit|e)
        shift
        tasks-edit $*
        ;;
    summary|s)
        shift
        tasks-summary $*
        ;;
    clean)
        shift
        tasks-clean $*
        ;;
    archive)
        shift
        tasks-archive $*
        ;;
    use)
        shift
        tasks-use $*
        ;;
    *)
        usage $*
        exit 0
        ;;
esac
